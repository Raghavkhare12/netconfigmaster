{
    "name": "NetConfigMaster Dev Container",
    "dockerComposeFile": "../docker-compose.yml",
    "service": "dev",
    "workspaceFolder": "/app",
    "shutdownAction": "stopCompose",

    // Features to add to the dev container
    "features": {
        "ghcr.io/devcontainers/features/git:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {},
        "ghcr.io/devcontainers/features/docker-in-docker:2": {}
    },

    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "settings": {
                "python.defaultInterpreterPath": "/app/.venv/bin/python",
                "python.formatting.provider": "black",
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "python.linting.flake8Enabled": true,
                "python.linting.mypyEnabled": true,
                "python.testing.pytestEnabled": true,
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "files.exclude": {
                    "**/__pycache__": true,
                    "**/*.pyc": true,
                    ".pytest_cache": true,
                    ".mypy_cache": true,
                    ".coverage": true,
                    "htmlcov": true
                }
            },
            "extensions": [
                "ms-python.python",
                "ms-python.pylint",
                "ms-python.black-formatter",
                "ms-python.isort",
                "ms-python.mypy-type-checker",
                "charliermarsh.ruff",
                "ms-toolsai.jupyter",
                "redhat.vscode-yaml",
                "ms-vscode.vscode-json",
                "ms-vscode-remote.remote-containers",
                "eamodio.gitlens",
                "github.copilot",
                "github.copilot-chat",
                "ms-vscode.test-adapter-converter",
                "hbenl.vscode-test-explorer"
            ]
        }
    },

    // Use 'forwardPorts' to make a list of ports inside the container available locally
    "forwardPorts": [5000, 8000, 8888],

    // Configure port attributes
    "portsAttributes": {
        "5000": {
            "label": "Web UI",
            "onAutoForward": "notify"
        },
        "8000": {
            "label": "Documentation",
            "onAutoForward": "silent"
        },
        "8888": {
            "label": "Jupyter Lab",
            "onAutoForward": "silent"
        }
    },

    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "poetry install --with dev,docs && poetry run pre-commit install",

    // Set environment variables
    "containerEnv": {
        "PYTHONPATH": "/app"
    },

    // Connect as non-root user
    "remoteUser": "root",

    // Mount the local git config
    "mounts": [
        "source=${localEnv:HOME}/.gitconfig,target=/root/.gitconfig,type=bind,consistency=cached"
    ]
}
